// <auto-generated />
using MarketApi.Data.MarketDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketApi.Migrations
{
    [DbContext(typeof(MarketDb))]
    partial class MarketDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketApi.Models.DiscountCode.DiscountCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPrecent")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("MarketApi.Models.Products.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountPrecent")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Category = 2,
                            Description = "bla bla bla",
                            DiscountPrecent = 10,
                            Name = "tv",
                            Price = 1000m,
                            Quantity = 0,
                            Sales = 5
                        },
                        new
                        {
                            ID = 2,
                            Category = 4,
                            Description = "not bad",
                            DiscountPrecent = 50,
                            Name = "charger",
                            Price = 1000m,
                            Quantity = 0,
                            Sales = 0
                        });
                });

            modelBuilder.Entity("MarketApi.Models.Rating.CustomerRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductRateID")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductRateID");

                    b.HasIndex("UserID");

                    b.ToTable("CustomerRate");
                });

            modelBuilder.Entity("MarketApi.Models.Rating.ProductRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("Average")
                        .HasColumnType("real");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductRate");
                });

            modelBuilder.Entity("MarketApi.Models.Users.Cart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("DiscountCodeID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DiscountCodeID")
                        .IsUnique()
                        .HasFilter("[DiscountCodeID] IS NOT NULL");

                    b.HasIndex("UserID");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MarketApi.Models.Users.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "123456789",
                            PhoneNumber = "09028648986",
                            Role = 1
                        },
                        new
                        {
                            ID = 2,
                            Password = "123456789",
                            PhoneNumber = "09203695741",
                            Role = 0
                        });
                });

            modelBuilder.Entity("MarketApi.Models.Rating.CustomerRate", b =>
                {
                    b.HasOne("MarketApi.Models.Rating.ProductRate", "ProductRate")
                        .WithMany("Rates")
                        .HasForeignKey("ProductRateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketApi.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketApi.Models.Rating.ProductRate", b =>
                {
                    b.HasOne("MarketApi.Models.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MarketApi.Models.Users.Cart", b =>
                {
                    b.HasOne("MarketApi.Models.DiscountCode.DiscountCode", "ApplyedDiscountCode")
                        .WithOne()
                        .HasForeignKey("MarketApi.Models.Users.Cart", "DiscountCodeID");

                    b.HasOne("MarketApi.Models.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplyedDiscountCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketApi.Models.Rating.ProductRate", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
